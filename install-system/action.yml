name: 'install-system'
description: 'rworkflows: Install all necessary system dependencies.'
author: 'Brian M. Schilder'
inputs: 
  i:
    description: >
      A list of inputs from the controller workflow.  
runs:
  using: 'composite'    
  steps:
    - name: Set GitHub token 
      run: |
        echo "GITHUB_PAT=${{ inputs.i.GITHUB_TOKEN }}" >> $GITHUB_ENV 
        echo "GITHUB_TOKEN=${{ inputs.i.GITHUB_TOKEN }}" >> $GITHUB_ENV 
      shell: bash {0} 
  
    - name: Check github object
      run: |
        echo ${{ inputs.i }}
        echo ${{ github }}
      shell: bash {0} 
      
    ## Set the R library to the directory matching the
    ## R packages cache step further below when running on Docker (Linux).
    - name: Set R Library home on Linux 
      if: inputs.i.runner_os == 'Linux'
      run: |
        echo "RSPM=${{ matrix.config.rspm }}" >> $GITHUB_ENV
        mkdir -p /__w/_temp/Library
        echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile
        git config --global --add safe.directory '*'
      shell: bash {0}

    ## Most of these steps are the same as the ones in
    ## https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
    ## If they update their steps, we will also need to update ours.
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    ## R is already included in the Bioconductor docker image,
    ## which is only available with Linux as the OS.
    - name: Setup R from r-lib
      if: inputs.i.runner_os != 'Linux'
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}

    ## pandoc is already included in the Bioconductor docker images
    - name: Setup pandoc from r-lib
      if: inputs.i.runner_os != 'Linux'
      uses: r-lib/actions/setup-pandoc@v2

    - name: Query dependencies
      run: |
        options(crayon.enabled = TRUE)
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
      shell: Rscript {0}

    - name: Restore R package cache
      if: "!contains(github.event.head_commit.message, '/nocache') && inputs.i.runner_os != 'Linux'"
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ inputs.i.cache_version }}-${{ inputs.i.runner_os }}-biocversion-${{ matrix.config.bioc }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ inputs.i.cache_version }}-${{ inputs.i.runner_os }}-biocversion-${{ matrix.config.bioc }}-r-${{  matrix.config.r }}-

    - name: Cache R packages on Linux
      if: "!contains(github.event.head_commit.message, '/nocache') && inputs.i.runner_os == 'Linux' "
      uses: actions/cache@v3
      with:
        path: /home/runner/work/_temp/Library
        key: ${{ inputs.i.cache_version }}-${{ inputs.i.runner_os }}-biocversion-${{ matrix.config.bioc }}-r-${{  matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ inputs.i.cache_version }}-${{ inputs.i.runner_os }}-biocversion-${{ matrix.config.bioc }}-r-${{  matrix.config.r }}-

    - name: Install Linux system dependencies
      if: inputs.i.runner_os == 'Linux'
      run: |
        sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
        echo $sysreqs
        sudo -s eval "$sysreqs"
        sudo apt-get install -y qpdf rsync
      shell: bash {0}

    - name: Install macOS system dependencies
      if: matrix.config.os == 'macOS-latest'
      run: |
        ## Enable installing XML from source if needed
        brew install libxml2
        echo "XML_CONFIG=/usr/local/opt/libxml2/bin/xml2-config" >> $GITHUB_ENV

        ## Required to install magick as noted at
        ## https://github.com/r-lib/usethis/commit/f1f1e0d10c1ebc75fd4c18fa7e2de4551fd9978f#diff-9bfee71065492f63457918efcd912cf2
        brew install imagemagick@6

        ## For textshaping, required by ragg, and required by pkgdown
        brew install harfbuzz fribidi

        ## For installing usethis's dependency gert
        brew install libgit2

        ## Required for tcltk
        brew install xquartz --cask

        ## Required for some ggplot2 functions
        # brew tap homebrew/cask
        # brew tap homebrew/cask-fonts
        # brew install svn
        # brew install --cask font-roboto
        brew install libxfont
      shell: bash {0}

    - name: Install Windows system dependencies
      if: inputs.i.runner_os == 'Windows'
      run: |
        npm install curl
      shell: bash {0} 
