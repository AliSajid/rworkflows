with2$docker_org <- docker_org
with2$cache_version <- cache_version
with2$cache_version <- cache_version
#### replace with: args ####
yml$jobs[[1]]$steps[[2]]$with <- with2
### Enable running workflow locally with act ####
if(isFALSE(enable_act)){
yml$jobs[[1]]$steps[[1]] <- NULL
}
}
#### Preview ####
if(isTRUE(preview)){
cat(yaml::as.yaml(yml))
}
#### Write to disk ####
if(!is.null(save_dir)){
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
# write_yaml2 <- function(yml,path){
#   result <- gsub(shQuote("on"),"on",yaml::as.yaml(yml))
#   path <- file(path, "w", encoding = "UTF-8", raw=TRUE)
#   open(path, "w")
#   on.exit(close(path))
#   cat(result, file = path, sep = "")
# }
# write_yaml2(yml = yml,
#             path = path)
yaml::write_yaml(x = yml,
file = path)
if(isTRUE(return_path)){
return(path)
} else {
return(yml)
}
} else {
return(yml)
}
yml
yml$on$push$branches
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
# write_yaml2 <- function(yml,path){
#   result <- gsub(shQuote("on"),"on",yaml::as.yaml(yml))
#   path <- file(path, "w", encoding = "UTF-8", raw=TRUE)
#   open(path, "w")
#   on.exit(close(path))
#   cat(result, file = path, sep = "")
# }
# write_yaml2(yml = yml,
#             path = path)
yaml::write_yaml(x = yml,
file = path)
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){list("branches"=list(branches))})
yml$on <- on2
#### with: args ####
with2 <- yml$jobs[[1]]$steps[[2]]$with
with2$run_bioccheck <- run_bioccheck
with2$run_crancheck <- run_crancheck
with2$run_vignettes <- run_vignettes
with2$has_testthat <- has_testthat
with2$run_covr <- run_covr
with2$run_pkgdown <- run_pkgdown
with2$has_runit <- has_runit
with2$GITHUB_TOKEN <- github_token
with2$docker_username <- docker_username
with2$docker_org <- docker_org
with2$cache_version <- cache_version
with2$cache_version <- cache_version
#### replace with: args ####
yml$jobs[[1]]$steps[[2]]$with <- with2
### Enable running workflow locally with act ####
if(isFALSE(enable_act)){
yml$jobs[[1]]$steps[[1]] <- NULL
}
if(is.null(name) || name=="rworkflows"){
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
#### name ####
yml$name <- name
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){list("branches"=list(branches))})
yml$on <- on2
#### with: args ####
with2 <- yml$jobs[[1]]$steps[[2]]$with
with2$run_bioccheck <- run_bioccheck
with2$run_crancheck <- run_crancheck
with2$run_vignettes <- run_vignettes
with2$has_testthat <- has_testthat
with2$run_covr <- run_covr
with2$run_pkgdown <- run_pkgdown
with2$has_runit <- has_runit
with2$GITHUB_TOKEN <- github_token
with2$docker_username <- docker_username
with2$docker_org <- docker_org
with2$cache_version <- cache_version
with2$cache_version <- cache_version
#### replace with: args ####
yml$jobs[[1]]$steps[[2]]$with <- with2
### Enable running workflow locally with act ####
if(isFALSE(enable_act)){
yml$jobs[[1]]$steps[[1]] <- NULL
}
}
#### Preview ####
if(isTRUE(preview)){
cat(yaml::as.yaml(yml))
}
#### Write to disk ####
if(!is.null(save_dir)){
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
# write_yaml2 <- function(yml,path){
#   result <- gsub(shQuote("on"),"on",yaml::as.yaml(yml))
#   path <- file(path, "w", encoding = "UTF-8", raw=TRUE)
#   open(path, "w")
#   on.exit(close(path))
#   cat(result, file = path, sep = "")
# }
# write_yaml2(yml = yml,
#             path = path)
yaml::write_yaml(x = yml,
file = path)
if(isTRUE(return_path)){
return(path)
} else {
return(yml)
}
} else {
return(yml)
}
yml$on
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
yml$on
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){c("branches"=branches})
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){c("branches"=branches)})
yml$on
yml$on <- on2
yml$on
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){list("branches"=branches)})
on2
yml$on <- on2
yml$on
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
yml$on==on2
yml$on
devtools::document()
library(rworkflows)
use_workflow()
## Custom handler prevents "on" from being converted to TRUE
handlers <- list('bool#yes' = function(x) { if (x == "on") x else TRUE})
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
handlers <- list('bool#yes' = function(x) { if (x == "yes") TRUE else "x"})
yaml::as.yaml(yml, handlers)
handlers <- list('bool#yes' = function(x) { if (x == "yes") TRUE else x})
yaml::as.yaml(yml, handlers)
yml
yaml::as.yaml(yml, handlers)
yaml::as.yaml(yml, handlers=handlers)
yml
handlers <- list('bool#yes' = function(x) { if (isTRUE(x)) "true" else x},)
handlers <- list('bool#yes' = function(x) { if (isTRUE(x)) "true" else x})
yaml::as.yaml(yml, handlers=handlers)
yml$jobs$rworkflows$steps[[2]]$with$run_crancheck
isTRUE(yml$jobs$rworkflows$steps[[2]]$with$run_crancheck)
handlers <- list('bool#true' = function(x) { if (isTRUE(x)) "true" else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#true' = function(x) { if (x=="yes") "true" else x})
handlers
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#true' = function(x) { if (x=="yes") "true" else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#true' = function(x) { if (x=='yes') 'true' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#true' = function(x) { if (x==TRUE) 'true' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#true' = function(x) { if (x==TRUE) 'true' else 'truthy'})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#yes' = function(x) { if (x==TRUE) 'true' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool' = function(x) { if (x==TRUE) 'true' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#yes' = function(x) { if (x=="TRUE") 'true' else x})
yaml::as.yaml(yml, handlers=handlers)
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#e' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#no' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('TRUE#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[y, TRUE]', handlers=list('bool#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "y") x else TRUE}))
yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#yes' = function(x) { if (x=="TRUE") 'truesss' else x})
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#no' = function(x) { if (x=="no") 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#false' = function(x) { if (x=="no") 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#no' = function(x) { if (x=="no") 'false' else 'false' })
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#no' = function(x) { if (x==FALSE) 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#no' = function(x) { if (x=='no') 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
# yaml::yaml.load('[TRUE, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
handlers <- list('bool#false' = function(x) { if (x=='no') 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool# no' = function(x) { if (x=='no') 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
handlers <- list('bool#no' = function(x) { if (x==' no') 'false' else x})
yaml::as.yaml(yml, handlers=handlers)
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == "TRUE") x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == TRUE) x else TRUE}))
yaml::yaml.load('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == 'y') x else TRUE}))
yaml::as.yaml('[y, yes]', handlers=list('bool#yes' = function(x) { if (x == 'y') x else TRUE}))
yaml::yaml.load(yml, handlers=list('bool#yes' = function(x) { if (x == 'y') x else TRUE}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(x) { if (x == 'y') x else TRUE}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(x) { if (x == 'y') 'true' else 'true'}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(x) { if (x == 'yes') 'true' else 'true'}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = 'true'}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = 'true'))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(){'true'}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(x){'true'}))
yaml::yaml.load(yaml::as.yaml(yml), handlers=list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'}))
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yaml::write_yaml(x = yml,
handlers=handlers2
file = path)
yaml::write_yaml(x = yml,
handlers=handlers2,
file = path)
library(rworkflows)
use_workflow()
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
templateR:::source_all()
templateR:::args2vars(use_workflow)
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
## Custom handler prevents "on" from being converted to TRUE
handlers <- list('bool#yes' = function(x) { if (x == "on") x else TRUE})
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
if(is.null(name) || name=="rworkflows"){
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
#### name ####
yml$name <- name
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){list("branches"=branches)})
yml$on <- on2
#### with: args ####
with2 <- yml$jobs[[1]]$steps[[2]]$with
with2$run_bioccheck <- run_bioccheck
with2$run_crancheck <- run_crancheck
with2$run_vignettes <- run_vignettes
with2$has_testthat <- has_testthat
with2$run_covr <- run_covr
with2$run_pkgdown <- run_pkgdown
with2$has_runit <- has_runit
with2$GITHUB_TOKEN <- github_token
with2$docker_username <- docker_username
with2$docker_org <- docker_org
with2$cache_version <- cache_version
with2$cache_version <- cache_version
#### replace with: args ####
yml$jobs[[1]]$steps[[2]]$with <- with2
### Enable running workflow locally with act ####
if(isFALSE(enable_act)){
yml$jobs[[1]]$steps[[1]] <- NULL
}
}
#### Preview ####
if(isTRUE(preview)){
cat(yaml::as.yaml(yml))
}
#### Write to disk ####
if(!is.null(save_dir)){
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yaml::write_yaml(x = yml,
handlers = handlers2,
file = path)
#### Return ####
if(isTRUE(return_path)){
return(path)
} else {
return(yml)
}
} else {
return(yml)
}
yml
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yml
yaml::as.yaml(yml, handlers = handlers)
yaml::yaml.load(yml, handlers = handlers)
yml
yaml::as.yaml(yml, handlers = handlers2)
yml
docker_org=docker_username
docker_org
yaml::write_yaml(x = yml,
handlers = handlers2,
file = path)
if(is.null(name) || name=="rworkflows"){
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
#### name ####
yml$name <- name
#### on ####
on2 <- lapply(stats::setNames(on,on),
function(x){list("branches"=branches)})
yml$on <- on2
#### with: args ####
with2 <- yml$jobs[[1]]$steps[[2]]$with
with2$run_bioccheck <- run_bioccheck
with2$run_crancheck <- run_crancheck
with2$run_vignettes <- run_vignettes
with2$has_testthat <- has_testthat
with2$run_covr <- run_covr
with2$run_pkgdown <- run_pkgdown
with2$has_runit <- has_runit
with2$GITHUB_TOKEN <- github_token
with2$docker_username <- docker_username
with2$docker_org <- docker_org
with2$cache_version <- cache_version
with2$cache_version <- cache_version
#### replace with: args ####
yml$jobs[[1]]$steps[[2]]$with <- with2
### Enable running workflow locally with act ####
if(isFALSE(enable_act)){
yml$jobs[[1]]$steps[[1]] <- NULL
}
}
#### Preview ####
if(isTRUE(preview)){
cat(yaml::as.yaml(yml))
}
#### Write to disk ####
if(!is.null(save_dir)){
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yaml::as.yaml(yml, handlers = handlers2)
yaml::write_yaml(x = yml,
handlers = handlers2,
file = path)
#### Return ####
if(isTRUE(return_path)){
return(path)
} else {
return(yml)
}
} else {
return(yml)
}
path
yaml::as.yaml(yml, handlers = handlers2)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yaml::as.yaml(yml, handlers = handlers2)
yaml::write_yaml(x = yml,
handlers = handlers2,
file = path)
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
yaml::as.yaml(yml, handlers = handlers2)
yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
handlers = handlers2,
file = path)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'!true'},
'bool#no' = function(x){'!false'})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
handlers = handlers2,
file = path)
#### Write bools as true/false rather than yes/no (default)
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
handlers = handlers2,
file = path)
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
devtools::document()
devtools::document()
library(rworkflows)
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
## Custom handler prevents "on" from being converted to TRUE
handlers <- list('bool#yes' = function(x) { if (x == "on") x else TRUE})
yml <- yaml::read_yaml(
system.file("yaml","rworkflows_template.yml",
package = "rworkflows"),
handlers = handlers)
name="rworkflows"
save_dir=here::here(".github","workflows")
path <- file.path(save_dir,paste0(name,".yml"))
dir.create(dirname(path),showWarnings = FALSE, recursive = TRUE)
messager("Saving workflow ==>",path,v=verbose)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){'true'},
'bool#no' = function(x){'false'})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){true},
'bool#no' = function(x){false})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){`true`},
'bool#no' = function(x){`false`})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){enquote(true)},
'bool#no' = function(x){enquote(false)})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){enquote("true")},
'bool#no' = function(x){enquote("false")})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){"${{ true }}"},
'bool#no' = function(x){enquote("${{ false }}")})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
#### Write bools as true/false rather than yes/no (default) ####
handlers2 <- list('bool#yes' = function(x){"${{ true }}"},
'bool#no' = function(x){"${{ false }}"})
yml2 <- yaml::yaml.load(yaml::as.yaml(yml), handlers = handlers2)
yaml::write_yaml(x = yml2,
file = path)
devtools::document()
library(rworkflows)
usethis::use_test()
path <- use_workflow(save_dir = file.path(tempdir(),".github","workflows"))
testthat::expect_true(file.exists(path))
devtools::check_man()
devtools::document()
devtools::check_man()
library(rworkflows)
