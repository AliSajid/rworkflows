subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=20, p_y = 1.5,p_color = "black",
#### Subplot #####
s_x=1.2, s_y=.8,  s_height = s_size*.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=20, p_y = 1.5,p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.8,  s_height = s_size*.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=20, p_y = 1.5,p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.8,  s_height = s_size*.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.5, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.8,  s_height = s_size*.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
s_size = .8
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.5, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.8,  s_height = s_size*.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.5, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.8,  s_height = s_size*1.2, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.6, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.6, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size*1.2,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=15, p_y = 1.6, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=13, p_y = 1.7, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=13, p_y = 1.6, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
stick <- hexSticker::sticker(
subplot = here::here("inst/hex/rworkflows.png"),
#### Package name ####
package = pkg, p_size=13, p_y = 1.65, p_color = "black",
#### Subplot #####
s_x=1.1, s_y=.9,  s_height = s_size, s_width = s_size,
#### Fill & border ####
h_fill = "white", h_color = "grey30",
#### Spotlight ####
spotlight = TRUE, l_alpha = .3, l_width = 10,
#### File output ####
filename = filename, dpi = 300)
badger::badge_last_commit()
devtools::document()
paste("Brian M. Schilder, Alan E. Murphy (2021) rworkflows: Continuous integration for R packages, *GitHub*; , https://github.com/neurogenomics/r_workflows"
)
citEntry(
entry    = "rworkflows",
title    = "rworkflows: Continuous integration for R packages",
author   = "Brian M. Schilder, Alan E. Murphy",
journal  = "GitHub",
year     = "2021",
volume   = " ",
number   = " ",
pages    = " ",
url      = "https://github.com/neurogenomics/r_workflows",
textVersion = paste("Brian M. Schilder, Alan E. Murphy (2021) rworkflows: Continuous integration for R packages, *GitHub*; , https://github.com/neurogenomics/r_workflows"
)
)
devtools::document()
library(rworkflows)
library(rworkflows)
citEntry(
entry    = "rworkflows",
title    = "rworkflows: Continuous integration for R packages",
author   = "Brian Schilder, Alan Murphy",
journal  = "GitHub",
year     = "2021",
volume   = " ",
number   = " ",
pages    = " ",
url      = "https://github.com/neurogenomics/r_workflows",
textVersion = paste("Brian Schilder, Alan Murphy (2021) rworkflows: Continuous integration for R packages, *GitHub*; https://github.com/neurogenomics/r_workflows")
)
library(rworkflows)
install.packages("usethis")
devtools::document()
BiocManager::install("biocthis")
?yaml::as.yaml()
lst
yml
run_bioccheck=FALSE
str(run_bioccheck)
toString(run_bioccheck)
tolower(toString(run_bioccheck))
# yaml::as.yaml()
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
paste0(name,":")=list(
use_gha <- function(name=c("test-document-deploy"),
on=c("push","pull_request"),
branches=c("master","main"),
run_bioccheck=FALSE,
run_crancheck=TRUE,
has_testthat=TRUE,
run_covr=TRUE,
run_pkgdown=TRUE,
has_RUnit=TRUE,
run_docker=TRUE,
repository="${{ github.repository }}",
repo_token="${{ secrets.PAT_GITHUB }}",
docker_username=NULL,
docker_org=NULL,
docker_token="${{ secrets.DOCKER_TOKEN }}"
){
# yaml::as.yaml()
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
paste0(name,":")=list(
# yaml::as.yaml()
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
paste0(name,":")=list(
paste0(name,":")
devtools::install_github("neurogenomics/templateR")
source("~/Desktop/r_workflows/R/use_gha.R")
templateR:::source_all()
templateR:::source_all()
templateR:::args2vars(use_gha)
# yaml::as.yaml()
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
list(
"runs-on:"="${{ matrix.config.os }}",
"name:"="${{ matrix.config.os }} (${{ matrix.config.r }})",
"container:"="${{ matrix.config.cont }}",
"env:"=list("RSPM: ${{ matrix.config.rspm }}"),
"strategy:"=list(
"fail-fast:"="false",
"matrix"=list(
"config:"=list(
"- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: 'bioconductor/bioconductor_docker:devel', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/release'}",
"- { os: macOS-latest, r: 'latest', bioc: 'release'}",
"- { os: windows-latest, r: 'latest', bioc: 'release'}"
)
)
),
"steps:"=list(
list(
"- if:"="${{ env.ACT }}",
"name:"="Hack container for local development",
"run:"="|
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs"
),
list("- uses:"="actions/checkout@v3"),
list("- uses:"="./test-document-deploy",
list("with:",
"run_bioccheck:"=tolower(toString(run_bioccheck)),
"run_crancheck:"=tolower(toString(run_crancheck)),
"has_testthat:"=tolower(toString(has_testthat)),
"run_covr:"=tolower(toString(run_covr)),
"run_pkgdown:"=tolower(toString(run_pkgdown)),
"has_RUnit:"=tolower(toString(has_RUnit)),
"run_docker:"=tolower(toString(run_docker)),
"repository:"=repository,
"repo-token:"=repo_token,
"DOCKER_USERNAME:"=docker_username,
"DOCKER_ORG:"=docker_org,
"DOCKER_TOKEN:"=docker_token,
"runner.os:"="${{ runner.os }}"
)
)
)
) |> `names<-`(paste0(name,":"))
)
) )
yaml::as.yaml(yml)
cat(yaml::as.yaml(yml))
cat(yaml::as.yaml(yml)
yml2 <-cat(yaml::as.yaml(yml)
yml2 <-cat(yaml::as.yaml(yml))
yml2
devtools::doc
yml
length(yml)
# templateR:::source_all()
# templateR:::args2vars(use_gha)
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
list(
"runs-on:"="${{ matrix.config.os }}",
"name:"="${{ matrix.config.os }} (${{ matrix.config.r }})",
"container:"="${{ matrix.config.cont }}",
"env:"=list("RSPM: ${{ matrix.config.rspm }}"),
"strategy:"=list(
"fail-fast:"="false",
"matrix"=list(
"config:"=list(
"- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: 'bioconductor/bioconductor_docker:devel', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/release'}",
"- { os: macOS-latest, r: 'latest', bioc: 'release'}",
"- { os: windows-latest, r: 'latest', bioc: 'release'}"
)
)
),
"steps:"=list(
list(
"- if:"="${{ env.ACT }}",
"name:"="Hack container for local development",
"run:"="|
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs"
),
list("- uses:"="actions/checkout@v3"),
list("- uses:"="./test-document-deploy",
list("with:",
"run_bioccheck:"=tolower(toString(run_bioccheck)),
"run_crancheck:"=tolower(toString(run_crancheck)),
"has_testthat:"=tolower(toString(has_testthat)),
"run_covr:"=tolower(toString(run_covr)),
"run_pkgdown:"=tolower(toString(run_pkgdown)),
"has_RUnit:"=tolower(toString(has_RUnit)),
"run_docker:"=tolower(toString(run_docker)),
"repository:"=repository,
"repo-token:"=repo_token,
"DOCKER_USERNAME:"=docker_username,
"DOCKER_ORG:"=docker_org,
"DOCKER_TOKEN:"=docker_token,
"runner.os:"="${{ runner.os }}"
)
)
)
) |> `names<-`(paste0(name,":"))
)
)
)
# templateR:::source_all()
# templateR:::args2vars(use_gha)
yml <- list(
"name:"=name,
"on:"=list("push:"=list("branches:"="[main, master]",
"pull_request:"=list("branches:"="[main, master]")),
"jobs:"=list(
list(
"runs-on:"="${{ matrix.config.os }}",
"name:"="${{ matrix.config.os }} (${{ matrix.config.r }})",
"container:"="${{ matrix.config.cont }}",
"env:"=list("RSPM: ${{ matrix.config.rspm }}"),
"strategy:"=list(
"fail-fast:"="false",
"matrix"=list(
"config:"=list(
"- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: 'bioconductor/bioconductor_docker:devel', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/release'}",
"- { os: macOS-latest, r: 'latest', bioc: 'release'}",
"- { os: windows-latest, r: 'latest', bioc: 'release'}"
)
)
),
"steps:"=list(
list(
"- if:"="${{ env.ACT }}",
"name:"="Hack container for local development",
"run:"="|
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs"
),
list("- uses:"="actions/checkout@v3"),
list("- uses:"="./test-document-deploy",
list("with:",
"run_bioccheck:"=tolower(toString(run_bioccheck)),
"run_crancheck:"=tolower(toString(run_crancheck)),
"has_testthat:"=tolower(toString(has_testthat)),
"run_covr:"=tolower(toString(run_covr)),
"run_pkgdown:"=tolower(toString(run_pkgdown)),
"has_RUnit:"=tolower(toString(has_RUnit)),
"run_docker:"=tolower(toString(run_docker)),
"repository:"=repository,
"repo-token:"=repo_token,
"DOCKER_USERNAME:"=docker_username,
"DOCKER_ORG:"=docker_org,
"DOCKER_TOKEN:"=docker_token,
"runner.os:"="${{ runner.os }}"
)
)
)
)# |> `names<-`(paste0(name,":"))
)
)
)
list(
list(
"runs-on:"="${{ matrix.config.os }}",
"name:"="${{ matrix.config.os }} (${{ matrix.config.r }})",
"container:"="${{ matrix.config.cont }}",
"env:"=list("RSPM: ${{ matrix.config.rspm }}"),
"strategy:"=list(
"fail-fast:"="false",
"matrix"=list(
"config:"=list(
"- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: 'bioconductor/bioconductor_docker:devel', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/release'}",
"- { os: macOS-latest, r: 'latest', bioc: 'release'}",
"- { os: windows-latest, r: 'latest', bioc: 'release'}"
)
)
),
"steps:"=list(
list(
"- if:"="${{ env.ACT }}",
"name:"="Hack container for local development",
"run:"="|
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs"
),
list("- uses:"="actions/checkout@v3"),
list("- uses:"="./test-document-deploy",
list("with:",
"run_bioccheck:"=tolower(toString(run_bioccheck)),
"run_crancheck:"=tolower(toString(run_crancheck)),
"has_testthat:"=tolower(toString(has_testthat)),
"run_covr:"=tolower(toString(run_covr)),
"run_pkgdown:"=tolower(toString(run_pkgdown)),
"has_RUnit:"=tolower(toString(has_RUnit)),
"run_docker:"=tolower(toString(run_docker)),
"repository:"=repository,
"repo-token:"=repo_token,
"DOCKER_USERNAME:"=docker_username,
"DOCKER_ORG:"=docker_org,
"DOCKER_TOKEN:"=docker_token,
"runner.os:"="${{ runner.os }}"
)
)
)
) |> `names<-`(paste0(name,":"))
)
)
list(
list(
"runs-on:"="${{ matrix.config.os }}",
"name:"="${{ matrix.config.os }} (${{ matrix.config.r }})",
"container:"="${{ matrix.config.cont }}",
"env:"=list("RSPM: ${{ matrix.config.rspm }}"),
"strategy:"=list(
"fail-fast:"="false",
"matrix"=list(
"config:"=list(
"- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: 'bioconductor/bioconductor_docker:devel', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/release'}",
"- { os: macOS-latest, r: 'latest', bioc: 'release'}",
"- { os: windows-latest, r: 'latest', bioc: 'release'}"
)
)
),
"steps:"=list(
list(
"- if:"="${{ env.ACT }}",
"name:"="Hack container for local development",
"run:"="|
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs"
),
list("- uses:"="actions/checkout@v3"),
list("- uses:"="./test-document-deploy",
list("with:",
"run_bioccheck:"=tolower(toString(run_bioccheck)),
"run_crancheck:"=tolower(toString(run_crancheck)),
"has_testthat:"=tolower(toString(has_testthat)),
"run_covr:"=tolower(toString(run_covr)),
"run_pkgdown:"=tolower(toString(run_pkgdown)),
"has_RUnit:"=tolower(toString(has_RUnit)),
"run_docker:"=tolower(toString(run_docker)),
"repository:"=repository,
"repo-token:"=repo_token,
"DOCKER_USERNAME:"=docker_username,
"DOCKER_ORG:"=docker_org,
"DOCKER_TOKEN:"=docker_token,
"runner.os:"="${{ runner.os }}"
)
)
)
) |> `names<-`(paste0(name,":"))
)
yml2 <- yaml::as.yaml(x = yml)
devtools::document()
devtools::document()
library(rworkflows)
usethis::use_news_md()
devtools::document()
library(rworkflows)
branches=c("master","main")
paste0("[",
paste(branches,collapse = ","),
"]")
branches=branches[1]
paste0("[",
paste(branches,collapse = ", "),
"]")
devtools::document()
devtools::document()
library(rworkflows)
devtools::document()
library(rworkflows)
BiocCheck::BiocCheck()
biocthis::use_bioc_github_action(biocdocker = )
BiocGenerics:::testPackage()
?rcmdcheck::rcmdcheck
badger::badge_last_commit()
