name: tinytex
'on':
  push:
    branches:
    - master
    - main
    - RELEASE_**
  pull_request:
    branches:
    - master
    - main
    - RELEASE_**
env:
  run_bioccheck: ${{ false }}
  run_rcmdcheck: ${{ true }}
  as_cran: ${{ true }}
  has_testthat: ${{ true }}
  has_runit: ${{ false }}
  run_covr: ${{ true }}
  run_pkgdown: ${{ true }}
  cache_version: cache-v1
  run_docker: ${{ false }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
  GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
  run_vignettes: ${{ true }}
jobs:
  tinytex:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    container: ${{ matrix.config.cont }}
    strategy:
      fail-fast: ${{ false }}
      matrix:
        config:
        - os: ubuntu-latest
          r: devel
          bioc: devel
          cont: bioconductor/bioconductor_docker:devel
          rspm: https://packagemanager.rstudio.com/cran/__linux__/focal/release
        - os: macOS-latest
          r: latest
          bioc: release
        - os: windows-latest
          r: latest
          bioc: release
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: ${{ true }}
      RSPM: ${{ matrix.config.rspm }}
      TZ: UTC
      GITHUB_REPO: ${{ github.repository }}
      RGL_USE_NULL: ${{ true }}
    steps:
    - name: Set GitHub environment variables 
      run: |
        echo "GITHUB_PAT=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV 
        echo "GITHUB_TOKEN=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV 
        echo "RGL_USE_NULL=TRUE" >> $GITHUB_ENV 
        echo "R_REMOTES_NO_ERRORS_FROM_WARNINGS=${{ true }}" >> $GITHUB_ENV 
        echo "RSPM=${{ matrix.config.rspm }}" >> $GITHUB_ENV
        echo "TZ=UTC" >> $GITHUB_ENV
        echo "NOT_CRAN=${{ !inputs.as_cran }}" >> $GITHUB_ENV
      shell: bash {0}
    
    ## Set the R library to the directory matching the
    ## R packages cache step further below when running on Docker (Linux).
    - name: Set R library home on Linux 
      if: inputs.runner_os == 'Linux'
      run: |
        mkdir -p /__w/_temp/Library
        echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile
        git config --global --add safe.directory '*'
      shell: bash {0} 
    
    ## R is already included in the Bioconductor docker image,
    ## which is only available with Linux as the OS.
    - name: Setup R from r-lib
      if: inputs.runner_os != 'Linux'
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}

    ## pandoc is already included in the Bioconductor docker images
    - name: Setup pandoc from r-lib
      if: inputs.runner_os != 'Linux'
      uses: r-lib/actions/setup-pandoc@v2 
      
    - name: Install Linux system dependencies
      if: inputs.runner_os == 'Linux'
      run: |
        sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
        echo $sysreqs
        sudo -s eval "$sysreqs"
        sudo apt-get install -y qpdf rsync
      shell: bash {0}

    - name: Install macOS system dependencies
      if: matrix.config.os == 'macOS-latest'
      run: |
        #### --- Justifications for each package --- ####
        ### libxml2 ###
        # Enable installing XML from source if needed
        ### imagemagick@6 ###
        # Required to install magick as noted at
        # https://github.com/r-lib/usethis/commit/f1f1e0d10c1ebc75fd4c18fa7e2de4551fd9978f#diff-9bfee71065492f63457918efcd912cf2
        ### harfbuzz fribidi ###
        # For textshaping, required by ragg, and required by pkgdown
        ### libgit2 ###
        # For installing usethis's dependency gert
        ### xquartz --cask ###
        # Required for tcltk 
        ### libxfont ###
        # Required for some ggplot2 functions  
        ### texlive ###
        # Required for rendering Sweave files (even with r-lib/actions/setup-tinytex)
        
        #### --- Install packages --- ####
        ### Install normally ###
        brew install libxml2 imagemagick@6 harfbuzz fribidi libgit2 texlive
        ### Install via cask ###
        brew install xquartz --cask 
        ### Set up xml2 ###
        echo "XML_CONFIG=/usr/local/opt/libxml2/bin/xml2-config" >> $GITHUB_ENV 
      shell: bash {0}

    - name: Install Windows system dependencies
      if: inputs.runner_os == 'Windows'
      run: |
        #### npm ####
        npm install curl 
      shell: bash {0}
      
    - name: Install latex
      uses: r-lib/actions/setup-tinytex@v2 
      env:
        # install full prebuilt version
        TINYTEX_INSTALLER: TinyTeX
          
    - name: Install additional LaTeX packages
      run: |
        tlmgr install bera
        tlmgr list --only-installed
      shell: bash {0}
      