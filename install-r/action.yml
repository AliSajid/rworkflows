name: 'install-r'
description: 'rworkflows: Install all necessary R packages.'
author: 'Brian M. Schilder'
inputs: 
  GITHUB_TOKEN:
    description: >
      Token for the repo. Can be passed in using {{ secrets.PAT_GITHUB }}  
    default: true 
  run_covr:
    description: >
      Run code coverage tests and publish results to codecov.
    default: true
  run_pkgdown:
    description: >
      Knit the README.Rmd (if available), build documentation website,
      and deploy to gh-pages branch.
    default: true
  has_runit: 
    description: >
      Run R Unit tests. Requires a subdirectory named 'unitTests'.
    default: false
  cache_version: 
    description: >
      Which cache version to use.
    default: cache-v1  
  runner_os:
    description: >
      The Operating System (OS ) that the workflow is running on.
    default: 'Linux'
runs:
  using: 'composite'    
  steps:
    - name: Set GitHub token 
      run: |
        echo "GITHUB_PAT=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV 
        echo "GITHUB_TOKEN=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV 
      shell: bash {0}

    - name: Install BiocManager
      run: |
        options(crayon.enabled = TRUE)
        message(paste('****', Sys.time(), 'installing BiocManager ****'))
        remotes::install_cran("BiocManager", upgrade = "never")
      shell: Rscript {0}

    ## Linux Bioconductor docker comes with bioconductor installed
    - name: Set BiocVersion
      if: inputs.runner_os != 'Linux'
      run: |
        options(crayon.enabled = TRUE)
        #### BiocManager::install doesn't understand "latest" #####
        if("${{ matrix.config.bioc }}" %in% c("latest","release")){
          BiocManager::install(update = TRUE, ask = FALSE)
        } else {
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        }
      shell: Rscript {0}

    - name: Install dependencies pass 1
      run: |
         ## Try installing the package dependencies in steps. First the local
         ## dependencies, then any remaining dependencies to avoid the
         ## issues described at
         ## https://stat.ethz.ch/pipermail/bioc-devel/2020-April/016675.html
         ## https://github.com/r-lib/remotes/issues/296
         ## Ideally, all dependencies should get installed in the first pass.

         ## Set the repos source depending on the OS
         ## Alternatively use https://storage.googleapis.com/bioconductor_docker/packages/
         ## though based on https://bit.ly/bioc2021-package-binaries
         ## the Azure link will be the main one going forward.
         options(crayon.enabled = TRUE)
         bioc_ver <- BiocManager::version()
         repos <- if(
             .Platform$OS.type == "unix" && Sys.info()["sysname"] != "Darwin"
         ) c(
             "AnVIL" = file.path("https://bioconductordocker.blob.core.windows.net/packages",bioc_ver,"bioc"),
             BiocManager::repositories()
             ) else BiocManager::repositories()

         ## For running the checks
         message(paste('****', Sys.time(), 'installing rcmdcheck and BiocCheck ****'))
         install.packages(c("rcmdcheck", "BiocCheck","rmarkdown"), repos = repos)

         ## Pass #1 at installing dependencies
         ## This pass uses AnVIL-powered fast binaries
         ## details at https://github.com/nturaga/bioc2021-bioconductor-binaries
         ## The speed gains only apply to the docker builds.
         message(paste('****', Sys.time(), 'pass number 1 at installing dependencies: local dependencies ****'))
         remotes::install_local(dependencies = TRUE, repos = repos, build_vignettes = FALSE, upgrade = TRUE)
      continue-on-error: true
      shell: Rscript {0}

    - name: Install dependencies pass 2
      run: |
        ## Pass #2 at installing dependencies
        ## This pass does not use AnVIL and will thus update any packages
        ## that have seen been updated in Bioconductor
        options(crayon.enabled = TRUE)
        message(paste('****', Sys.time(), 'pass number 2 at installing dependencies: any remaining dependencies ****'))
        remotes::install_local(dependencies = TRUE, repos = BiocManager::repositories(), build_vignettes = TRUE, upgrade = TRUE, force = TRUE)
      continue-on-error: true
      shell: Rscript {0}

    - name: Install dependencies pass 3
      run: |
        ## Pass #3 at installing dependencies
        ## Install via binaries
        options(crayon.enabled = TRUE)
        message(paste('****', Sys.time(), 'pass number 3 at installing dependencies: any remaining dependencies ****'))
        remotes::install_local(type = "binary", dependencies = TRUE, repos = BiocManager::repositories(), build_vignettes = FALSE, upgrade = TRUE, force = TRUE)
      shell: Rscript {0}

    - name: Install BiocGenerics
      if:  inputs.has_runit == 'true'
      run: |
        ## Install BiocGenerics
        options(crayon.enabled = TRUE)
        BiocManager::install("BiocGenerics")
      shell: Rscript {0}

    - name: Install covr
      if: inputs.run_covr == 'true' && inputs.runner_os == 'Linux'
      run: |
        options(crayon.enabled = TRUE)
        install.packages("covr") 
      shell: Rscript {0}

    - name: Install pkgdown
      if: inputs.run_pkgdown == 'true' && inputs.runner_os == 'Linux'
      run: |
        options(crayon.enabled = TRUE)
        install.packages("pkgdown")
      shell: Rscript {0}

    - name: Session info
      run: |
        options(width = 100, crayon.enabled = TRUE)
        pkgs <- installed.packages()[, "Package"]
        if(!require("sessioninfo")) install.packages("sessioninfo")
        tryCatch({
          sessioninfo::session_info(pkgs, include_base = TRUE)
        }, error = function(x){utils::sessionInfo()})
      shell: Rscript {0}
      